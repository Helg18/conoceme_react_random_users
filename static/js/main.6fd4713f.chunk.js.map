{"version":3,"sources":["components/Header/Header.js","Services/axios.js","components/Body/Body.js","components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","Component","request","axios","create","baseURL","Services_axios","getNewPerson","_callee","regenerator_default","wrap","_context","prev","next","abrupt","get","then","response","data","results","stop","this","Body","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","ucfirst","string","charAt","toUpperCase","slice","getMaleFemale","gender","className","getFNac","Date","toDateString","getAddress","address","state","bind","assertThisInitialized","Api","setState","onClick","name","genderInfo","email","fNac","phone","src","alt","width","Footer","href","target","rel","App","components_Header_Header","components_Body_Body","components_Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6fd4713f.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './Header.css';\n\nclass Header extends Component {\n    render() {\n        return (\n            <header>\n                <h1>Conoceme</h1>\n            </header>\n        );\n    }\n}\n\nexport default Header;","import axios from 'axios/dist/axios';\n\nconst BASE_URL = 'https://randomuser.me/api';\nconst request = axios.create({\n    baseURL: BASE_URL\n});\n\nclass Api {\n    getNewPerson = async () => request.get()\n        .then(function (response) {\n            // handle success\n            return response.data.results[0];\n        });\n}\n\nexport default new Api();","import React, {Component} from 'react';\nimport Api from '../../Services/axios';\nimport './Body.css';\n\nclass Body extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            results: ''\n        };\n        this.getNewPerson = this.getNewPerson.bind(this);\n    }\n\n    async componentWillMount() {\n        let results = await Api.getNewPerson();\n        this.setState({results: results});\n    }\n\n    ucfirst = (string) => {\n        return string.charAt(0).toUpperCase() + string.slice(1);\n    };\n\n    getMaleFemale = (gender) => {\n        if (gender === 'female') {\n            return <i className=\"fa fa-1x fa-venus\"/>\n        }\n        return <i className=\"fa fa-1x fa-mars\"/>\n\n    };\n\n    getFNac = (string) => {\n        const date = new Date(string['date']);\n        return date.toDateString();\n    };\n\n    getAddress = (address) => {\n        return address['street'] + ', ' + this.ucfirst(address['city']) + ', ' + this.ucfirst(address['state']);\n    };\n\n    async getNewPerson() {\n        this.setState({results: await Api.getNewPerson()});\n    }\n\n    render() {\n        if (this.state.results === '') {\n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12 blocks-btn\">\n                            <button className=\"btn btn-lg btn-success ml-5\" onClick={this.getNewPerson}>\n                                <i className=\"fa fa-redo\"/>Retry..!\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n        const results = this.state.results;\n        const name = this.ucfirst(results['name']['title']) + \" \" + this.ucfirst(results['name']['first']) + \" \" + this.ucfirst(results['name']['last']);\n        const genderInfo = this.ucfirst(results['gender']);\n        const gender = this.getMaleFemale(results['gender']);\n        const email = results['email'];\n        const fNac = this.getFNac(results['dob']);\n        const address = this.getAddress(results['location']);\n        const phone = results['cell'];\n        return (\n            <div className=\"col-md-12 col-xs-12 col-sm-12 mt-5 mb-5\">\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <div className=\"container\">\n                            <div className=\"row\">\n                                <div className=\"col-md-4\">\n                                    <img src={results['picture']['large']} alt={name} width=\"100%\"/>\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <span>Hey! My name is: </span>\n                                    <h3>{name}</h3>\n                                    <div className=\"row\">\n                                        <table className=\"table table-hover table-border\">\n                                            <tbody className=\"info\">\n                                            {/* Email */}\n                                            <tr>\n                                                <td className=\"ic-fa\"><i className=\"fa fa-1x fa-at\"/></td>\n                                                <td>\n                                                    <span className=\"info\">{email}</span>\n                                                </td>\n                                            </tr>\n\n                                            {/* Genero */}\n                                            <tr>\n                                                <td width=\"10px\" className=\"ic-fa\">{gender}</td>\n                                                <td>\n                                                    <span className=\"info\">{genderInfo}</span>\n                                                </td>\n                                            </tr>\n\n                                            {/* F. de nacimiento */}\n                                            <tr>\n                                                <td width=\"10px\" className=\"ic-fa\"><i\n                                                    className=\"fa fa-1x fa-birthday-cake\"/></td>\n                                                <td>\n                                                    <span className=\"info\">{fNac}</span>\n                                                </td>\n                                            </tr>\n\n                                            {/* Direccion */}\n                                            <tr>\n                                                <td width=\"10px\" className=\"ic-fa\"><i\n                                                    className=\"fas fa-map-marked-alt\"/></td>\n                                                <td>\n                                                    <span className=\"info\">{address}.</span>\n                                                </td>\n                                            </tr>\n\n                                            {/* Telefono */}\n                                            <tr>\n                                                <td width=\"10px\" className=\"ic-fa\"><i className=\"fas fa-phone\"/></td>\n                                                <td>\n                                                    <span className=\"info\">+1{phone}</span>\n                                                </td>\n                                            </tr>\n\n\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"card-footer\">\n                        <div className=\"container\">\n                            <div className=\"row\">\n                                <div className=\"col-md-12 col-xs-6 col-sm-6 blocks-btn\">\n                                    <button className=\"btn btn-lg btn-danger btn-margin\" onClick={this.getNewPerson}>\n                                        Next\n                                    </button>\n                                    <button className=\"btn btn-lg btn-success btn-margin\" onClick={this.getNewPerson}>\n                                        Match\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Body;","import React, {Component} from 'react';\nimport './Footer.css';\n\nclass Footer extends Component {\n    render() {\n        return (\n            <footer>\n                <span>Sitio de prueba desarrollado con React, usando <a href=\"https://randomuser.me/\" target=\"_blank\"\n                                                                        rel=\"noopener noreferrer\">RandomUser.me</a></span><br/>\n                <span>Desarrollado por <a href=\"mailto:helg18@gmail.com\" target=\"_blank\"\n                                          rel=\"noopener noreferrer\">Ing. Henry Leon</a></span>\n            </footer>\n        );\n    }\n}\n\nexport default Footer;","import React, {Component} from 'react';\nimport Header from './components/Header/Header';\nimport Body from './components/Body/Body';\nimport Footer from './components/Footer/Footer';\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n            <div className=\"\">\n                <Header/>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Body/>\n                    </div>\n                </div>\n                <Footer/>\n            </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '@fortawesome/fontawesome-free/css/all.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}